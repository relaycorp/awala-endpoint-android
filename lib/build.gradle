plugins {
  id 'com.android.library'
  id 'kotlin-android'
  id 'kotlin-kapt'
  id 'maven-publish'
  id 'org.jlleitschuh.gradle.ktlint' version "11.6.1"
  id 'org.jetbrains.dokka' version "1.9.10"
}

apply from: 'jacoco.gradle'

android {
  compileSdk 34

  defaultConfig {
    minSdk 23
    targetSdk 34
    versionCode 1
    versionName "1.0.0"
    namespace 'tech.relaycorp.awaladroid'

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles "consumer-rules.pro"
  }

  buildTypes {
    debug {
      testCoverageEnabled = true
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    coreLibraryDesugaringEnabled true
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_17
    freeCompilerArgs += "-Xexplicit-api=strict"
  }
  testOptions {
    unitTests {
      returnDefaultValues = true
      includeAndroidResources = true
    }
  }
  packagingOptions {
    jniLibs {
      useLegacyPackaging false
      excludes += ['META-INF/AL2.0', 'META-INF/LGPL2', 'META-INF/LGPL2.1', 'META-INF/licenses/*']
    }
    resources {
      excludes += ['META-INF/AL2.0', 'META-INF/LGPL2', 'META-INF/LGPL2.1', 'META-INF/licenses/*', '**/attach_hotspot_windows.dll']
    }
  }
}

dependencies {
  // Java 8
  coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

  // Kotlin
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"

  // Awala
  implementation 'tech.relaycorp:awala:1.68.5'
  implementation 'tech.relaycorp:awala-keystore-file:1.6.41'
  implementation 'tech.relaycorp:poweb:1.5.68'
  testImplementation 'tech.relaycorp:awala-testing:1.5.27'

  // Security
  implementation 'androidx.security:security-crypto:1.1.0-alpha06'
  implementation "org.bouncycastle:bcpkix-jdk15on:1.70"

  // Serialization
  implementation 'org.mongodb:bson:4.10.2'

  // Testing
  testImplementation 'junit:junit:4.13.2'
  testImplementation 'androidx.test:core:1.5.0'
  testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
  testImplementation 'org.robolectric:robolectric:4.10.3'
  testImplementation 'org.mockito:mockito-inline:5.2.0'
  testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
  testImplementation 'io.github.hakky54:logcaptor:2.7.10'

  // Instrumentation Testing
  androidTestImplementation 'androidx.test:runner:1.5.2'
  androidTestImplementation 'androidx.test:rules:1.5.0'
  androidTestImplementation 'androidx.test.ext:junit:1.1.5'
  androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
  androidTestImplementation 'org.mockito:mockito-android:5.3.1'
  androidTestImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0") {
    // Workaround for Android API < 26:
    // https://github.com/mockito/mockito/pull/2024
    exclude group: "org.mockito", module: "mockito-core"
  }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_17
    freeCompilerArgs += [
      '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi',
      '-opt-in=kotlinx.coroutines.FlowPreview',
      '-opt-in=kotlin.time.ExperimentalTime'
    ]
  }
}

dokkaHtml.configure {
    dokkaSourceSets {
        configureEach {
            reportUndocumented.set(true)
            includes.from("api-docs.md")
        }
    }
}

ktlint {
  verbose = true
  android = true
  version = "1.0.1"
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'tech.relaycorp'
                artifactId = 'awaladroid'

                pom {
                    name.set(rootProject.name)
                    description.set("High-level library for Android apps implementing Awala endpoints")
                    url.set("https://github.com/relaycorp/relaynet-endpoint-android")
                    developers {
                        developer {
                            id.set("relaycorp")
                            name.set("Relaycorp, Inc.")
                            email.set("no-reply@relaycorp.tech")
                        }
                    }
                    licenses {
                        license {
                            name.set("Apache-2.0")
                        }
                    }
                    scm {
                        connection.set("scm:git:https://github.com/relaycorp/relaynet-endpoint-android.git")
                        developerConnection.set(
                            "scm:git:https://github.com/relaycorp/relaynet-endpoint-android.git"
                        )
                        url.set("https://github.com/relaycorp/relaynet-endpoint-android")
                    }
                }
            }
        }
    }
}
